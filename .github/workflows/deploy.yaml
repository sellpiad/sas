name: Deploy 

on:
  push:
    branches:
      - main  

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.11.0'

    - name: Install dependencies
      run: |
        cd client
        npm install

    - name: Build project
      run: |
        cd client
        npm run build
      env:
        REACT_APP_WS_TARGET: ${{ secrets.REACT_APP_WS_TARGET }}

    - name: Set up JDK
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'adopt'

    - name: Install server dependencies and build
      run: |
        cd server
        mvn clean package

    - name: Prepare deployment package
      run: |
        mkdir -p sas/frontend sas/backend
        cp scripts/* sas/
        cp appspec.yml sas/
        cp -r client/build sas/frontend
        cp -r server/target/* sas/backend

    - name: Set permissions for scripts
      run: |
        chmod +x sas/start_server.sh
        chmod +x sas/stop_server.sh

    - name: Create deployment zip
      run: |
        zip -r sas.zip sas/

    - name: Upload to S3
      run: |
        aws s3 cp sas.zip s3://${{ secrets.AWS_S3_BUCKET }}/sas.zip
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_DEFAULT_REGION: ap-northeast-2

    - name: Deploy to CodeDeploy
      run: |
        aws deploy create-deployment \
          --application-name ${{ secrets.AWS_APPLICATION_NAME }} \
          --deployment-group-name ${{ secrets.AWS_DEPLOYMENT_GROUP_NAME }} \
          --s3-location bucket=${{ secrets.AWS_S3_BUCKET }},key=sas.zip,bundleType=zip
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_DEFAULT_REGION:  ap-northeast-2
